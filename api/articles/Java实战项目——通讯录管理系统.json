{"title":"Java实战项目——通讯录管理系统","uid":"67a56440aec66cdb8eb0066900577ecf","slug":"Java实战项目——通讯录管理系统","date":"2022-01-30T12:46:22.704Z","updated":"2022-01-30T14:49:47.850Z","comments":true,"path":"api/articles/Java实战项目——通讯录管理系统.json","keywords":null,"cover":null,"content":"<h2 id=\"Java实战项目——通讯录管理系统\"><a href=\"#Java实战项目——通讯录管理系统\" class=\"headerlink\" title=\"Java实战项目——通讯录管理系统\"></a>Java实战项目——通讯录管理系统</h2><h3 id=\"1-需求分析\"><a href=\"#1-需求分析\" class=\"headerlink\" title=\"1.需求分析\"></a>1.需求分析</h3><p>我们需要实现一个具有如下功能的通讯录管理系统：添加联系人、显示联系人、查找联系人、修改联系人、删除联系人、清空联系人、退出。</p>\n<h3 id=\"2-各模块具体功能实现\"><a href=\"#2-各模块具体功能实现\" class=\"headerlink\" title=\"2.各模块具体功能实现\"></a>2.各模块具体功能实现</h3><h4 id=\"1）添加联系人模块\"><a href=\"#1）添加联系人模块\" class=\"headerlink\" title=\"1）添加联系人模块\"></a>1）添加联系人模块</h4><p>联系人信息包括：姓名、性别、年龄、电话、住址。</p>\n<p>首先我们实现添加联系人的接口Append，其中包含了一个抽象的append方法。其实现代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public User append() &#123;\n       Scanner scanner1 &#x3D; new Scanner(System.in);\n       Scanner scanner2 &#x3D; new Scanner(System.in);\n       Scanner scanner3 &#x3D; new Scanner(System.in);\n       Scanner scanner4 &#x3D; new Scanner(System.in);\n       Scanner scanner5 &#x3D; new Scanner(System.in);\n       System.out.println(&quot;请输入姓名：&quot;);\n       this.name &#x3D; scanner1.nextLine();\n\n       while(true) &#123;\n           System.out.println(&quot;请输入性别：\\n（男&#x2F;女）&quot;);\n           this.sex &#x3D; scanner2.nextLine();\n           if (!sex.equals(&quot;男&quot;) &amp;&amp; !sex.equals(&quot;女&quot;)) &#123;\n               System.out.println(&quot;输入错误！请重新输入：&quot;);\n           &#125;\n           else break;\n           &#125;\n\n\n       System.out.println(&quot;请输入年龄：&quot;);\n       this.age &#x3D; scanner3.nextInt();\n\n       System.out.println(&quot;请输入联系电话：&quot;);\n       this.phoneNum &#x3D; scanner4.nextLine();\n\n       System.out.println(&quot;请输入家庭住址：&quot;);\n       this.address &#x3D; scanner5.nextLine();\n       System.out.println(&quot;添加成功\\n请按任意键继续...&quot;);\n\n       return this;\n   &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在实现添加联系人后，我们将他们储存在了一个arrayList集合中。</p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">ArrayList&lt;User&gt; users &#x3D; new ArrayList&lt;&gt;();<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h4 id=\"2）显示联系人\"><a href=\"#2）显示联系人\" class=\"headerlink\" title=\"2）显示联系人\"></a>2）显示联系人</h4><p>通过增强for循环遍历User这个集合来显示联系人，我们设计并实现了Show接口，其代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">for(User user : users) &#123;\n\tSystem.out.println(user);\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3）删除联系人\"><a href=\"#3）删除联系人\" class=\"headerlink\" title=\"3）删除联系人\"></a>3）删除联系人</h4><p>通过scanner获取输入的姓名，并使用增强for遍历User找到对应姓名的联系人，用remove删除,其代码如下：</p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">Scanner scanner1 &#x3D; new Scanner(System.in);\n                   System.out.println(&quot;请输入您要删除的联系人：&quot;);\n                   String name &#x3D; scanner1.nextLine();\n                   for(User user : users) &#123;\n                       if(user.name.equals(name)) &#123;\n                           users.remove(user);\n                           System.out.println(&quot;删除成功&quot;);\n                           break;\n                       &#125;\n                   &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-查找联系人\"><a href=\"#4-查找联系人\" class=\"headerlink\" title=\"4)查找联系人\"></a>4)查找联系人</h4><p>通过scanner获取输入的姓名，使用增强for遍历User找到对应姓名的联系人，并显示，其代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">Scanner scanner2 &#x3D; new Scanner(System.in);\n                    System.out.println(&quot;请输入你要查找的联系人：&quot;);\n                    String name1 &#x3D; scanner2.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name1)) &#123;\n                            System.out.println(user);\n                        &#125;\n                    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"5）修改联系人\"><a href=\"#5）修改联系人\" class=\"headerlink\" title=\"5）修改联系人\"></a>5）修改联系人</h4><p>通过scanner获取输入的姓名，使用增强for遍历User找到对应姓名的联系人，删除那个联系人并重新添加新联系人，其代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">Scanner scanner3 &#x3D; new Scanner(System.in);\n                    System.out.println(&quot;请输入您要修改的联系人：&quot;);\n                    String name2 &#x3D; scanner3.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name2)) &#123;\n                            users.remove(user);\n                            users.add(new User().append());\n                        &#125;\n                    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6）清空联系人\"><a href=\"#6）清空联系人\" class=\"headerlink\" title=\"6）清空联系人\"></a>6）清空联系人</h4><p>当用户输入6，我们通过removeAll清除User中的所有元素，其代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">users.removeAll(users);\n                   System.out.println(&quot;清空联系人成功！&quot;);\n                   break;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"o-退出\"><a href=\"#o-退出\" class=\"headerlink\" title=\"o)退出\"></a>o)退出</h4><p>当用户输入0时直接退出do  while循环，结束程序。</p>\n<h3 id=\"3-主模块\"><a href=\"#3-主模块\" class=\"headerlink\" title=\"3.主模块\"></a>3.主模块</h3><h4 id=\"1）初始界面\"><a href=\"#1）初始界面\" class=\"headerlink\" title=\"1）初始界面\"></a>1）初始界面</h4><p>该界面主要是帮助用户了解如何使用该程序，代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">System.out.println(&quot;*****************&quot;);\nSystem.out.println(&quot;***1、添加联系人***&quot;);\nSystem.out.println(&quot;***2、显示联系人***&quot;);\nSystem.out.println(&quot;***3、删除联系人***&quot;);\nSystem.out.println(&quot;***4、查找联系人***&quot;);\nSystem.out.println(&quot;***5、修改联系人***&quot;);\nSystem.out.println(&quot;***6、清空联系人***&quot;);\nSystem.out.println(&quot;***0、退出通讯录***&quot;);\nSystem.out.println(&quot;*****************&quot;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-各项功能\"><a href=\"#2-各项功能\" class=\"headerlink\" title=\"2)各项功能\"></a>2)各项功能</h4><p>各项功能通过switch case进行整合，其总代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.baidu.lihaonan;\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class AddressBook &#123;\n    public static void main(String[] args) &#123;\n        ArrayList&lt;User&gt; users &#x3D; new ArrayList&lt;&gt;();\n        int number;\n        do &#123;\n        System.out.println(&quot;*****************&quot;);\n        System.out.println(&quot;***1、添加联系人***&quot;);\n        System.out.println(&quot;***2、显示联系人***&quot;);\n        System.out.println(&quot;***3、删除联系人***&quot;);\n        System.out.println(&quot;***4、查找联系人***&quot;);\n        System.out.println(&quot;***5、修改联系人***&quot;);\n        System.out.println(&quot;***6、清空联系人***&quot;);\n        System.out.println(&quot;***0、退出通讯录***&quot;);\n        System.out.println(&quot;*****************&quot;);\n        Scanner scanner &#x3D; new Scanner(System.in);\n        number &#x3D; scanner.nextInt();\n            switch (number) &#123;\n                case 1:\n                    users.add(new User().append());\n\n                    break;\n                case 2:\n                    for(User user : users) &#123;\n                        System.out.println(user);\n                    &#125;\n                    break;\n                case 3:\n                    Scanner scanner1 &#x3D; new Scanner(System.in);\n                    System.out.println(&quot;请输入您要删除的联系人：&quot;);\n                    String name &#x3D; scanner1.nextLine();\n                    for(User user : users) &#123;\n                        if(user.name.equals(name)) &#123;\n                            users.remove(user);\n                            System.out.println(&quot;删除成功&quot;);\n                            break;\n                        &#125;\n                    &#125;\n                    break;\n                case 4:\n                    Scanner scanner2 &#x3D; new Scanner(System.in);\n                    System.out.println(&quot;请输入你要查找的联系人：&quot;);\n                    String name1 &#x3D; scanner2.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name1)) &#123;\n                            System.out.println(user);\n                        &#125;\n                    &#125;\n                    break;\n                case 5:\n                    Scanner scanner3 &#x3D; new Scanner(System.in);\n                    System.out.println(&quot;请输入您要修改的联系人：&quot;);\n                    String name2 &#x3D; scanner3.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name2)) &#123;\n                            users.remove(user);\n                            users.add(new User().append());\n                        &#125;\n                    &#125;\n                    break;\n                case 6:\n                    users.removeAll(users);\n                    System.out.println(&quot;清空联系人成功！&quot;);\n                    break;\n            &#125;\n        &#125; while (number !&#x3D; 0);\n                System.out.println(&quot;已退出&quot;);\n\n\n\n    &#125;\n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-关于User类的说明\"><a href=\"#3-关于User类的说明\" class=\"headerlink\" title=\"3)关于User类的说明\"></a>3)关于User类的说明</h4><p>我们通过一个User类，其定义如下（其中包含了get-set方法，构造方法，重写的toString()和equals()方法）其代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.baidu.lihaonan;\n\nimport java.util.Objects;\nimport java.util.Scanner;\n\npublic class User implements Append, Change, Exit, Find &#123;\n    int age;\n    String name;\n    String sex;\n    String phoneNum;\n    String address;\n\n\n    Scanner scanner &#x3D; new Scanner(System.in);\n\n    @Override\n    public User append() &#123;\n        Scanner scanner1 &#x3D; new Scanner(System.in);\n        Scanner scanner2 &#x3D; new Scanner(System.in);\n        Scanner scanner3 &#x3D; new Scanner(System.in);\n        Scanner scanner4 &#x3D; new Scanner(System.in);\n        Scanner scanner5 &#x3D; new Scanner(System.in);\n        System.out.println(&quot;请输入姓名：&quot;);\n        this.name &#x3D; scanner1.nextLine();\n\n        while(true) &#123;\n            System.out.println(&quot;请输入性别：\\n（男&#x2F;女）&quot;);\n            this.sex &#x3D; scanner2.nextLine();\n            if (!sex.equals(&quot;男&quot;) &amp;&amp; !sex.equals(&quot;女&quot;)) &#123;\n                System.out.println(&quot;输入错误！请重新输入：&quot;);\n            &#125;\n            else break;\n            &#125;\n\n\n        System.out.println(&quot;请输入年龄：&quot;);\n        this.age &#x3D; scanner3.nextInt();\n\n        System.out.println(&quot;请输入联系电话：&quot;);\n        this.phoneNum &#x3D; scanner4.nextLine();\n\n        System.out.println(&quot;请输入家庭住址：&quot;);\n        this.address &#x3D; scanner5.nextLine();\n        System.out.println(&quot;添加成功\\n请按任意键继续...&quot;);\n\n        return this;\n    &#125;\n    @Override\n    public void change()&#123;\n\n    &#125;\n\n    @Override\n    public void exit()&#123;\n\n    &#125;\n    @Override\n    public User find()&#123;\n          return null;\n    &#125;\n\n    @Override\n    public String toString() &#123;\n        return &quot;名字：&quot;+name+&quot;     联系电话：&quot;+phoneNum+&quot;    性别:&quot;+sex+&quot;    年龄:&quot;+age+&quot;   家庭住址:&quot;+address;\n    &#125;\n\n    @Override\n    public boolean equals(Object o) &#123;\n        if (this &#x3D;&#x3D; o) return true;\n        if (o &#x3D;&#x3D; null || getClass() !&#x3D; o.getClass()) return false;\n        User user &#x3D; (User) o;\n        return age &#x3D;&#x3D; user.age &amp;&amp; Objects.equals(name, user.name) &amp;&amp; Objects.equals(sex, user.sex) &amp;&amp; Objects.equals(phoneNum, user.phoneNum) &amp;&amp; Objects.equals(address, user.address) &amp;&amp; Objects.equals(scanner, user.scanner);\n    &#125;\n\n    @Override\n    public int hashCode() &#123;\n        return Objects.hash(age, name, sex, phoneNum, address, scanner);\n    &#125;\n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>以上就是通讯录管理系统的设计思路以及实现方法。</p>\n","text":"Java实战项目——通讯录管理系统1.需求分析我们需要实现一个具有如下功能的通讯录管理系统：添加联系人、显示联系人、查找联系人、修改联系人、删除联系人、清空联系人、退出。 2.各模块具体功能实现1）添加联系人模块联系人信息包括：姓名、性别、年龄、电话、住址。 首先我们实现添加联系...","link":"","photos":[],"count_time":{"symbolsCount":"9.4k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"计算机","slug":"计算机","count":1,"path":"api/tags/计算机.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"实战小项目","slug":"实战小项目","count":1,"path":"api/tags/实战小项目.json"},{"name":"后端开发","slug":"后端开发","count":1,"path":"api/tags/后端开发.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE%E2%80%94%E2%80%94%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">Java实战项目——通讯录管理系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90\"><span class=\"toc-text\">1.需求分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%90%84%E6%A8%A1%E5%9D%97%E5%85%B7%E4%BD%93%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">2.各模块具体功能实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%EF%BC%89%E6%B7%BB%E5%8A%A0%E8%81%94%E7%B3%BB%E4%BA%BA%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">1）添加联系人模块</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%EF%BC%89%E6%98%BE%E7%A4%BA%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">2）显示联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%EF%BC%89%E5%88%A0%E9%99%A4%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">3）删除联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E6%9F%A5%E6%89%BE%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">4)查找联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5%EF%BC%89%E4%BF%AE%E6%94%B9%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">5）修改联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6%EF%BC%89%E6%B8%85%E7%A9%BA%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">6）清空联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#o-%E9%80%80%E5%87%BA\"><span class=\"toc-text\">o)退出</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%B8%BB%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">3.主模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%EF%BC%89%E5%88%9D%E5%A7%8B%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\">1）初始界面</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%90%84%E9%A1%B9%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">2)各项功能</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E5%85%B3%E4%BA%8EUser%E7%B1%BB%E7%9A%84%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">3)关于User类的说明</span></a></li></ol></li></ol></li></ol>","author":{"name":"lihaonan","slug":"blog-author","avatar":"/static/img/touxiang.jpg","link":"/","description":"生活如此美好","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"http://localhost:4000/static/img/touxiang.jpg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"prev_post":{},"next_post":{}}