[{"id":"67a56440aec66cdb8eb0066900577ecf","title":"Java实战项目——通讯录管理系统","content":"Java实战项目——通讯录管理系统1.需求分析我们需要实现一个具有如下功能的通讯录管理系统：添加联系人、显示联系人、查找联系人、修改联系人、删除联系人、清空联系人、退出。\n2.各模块具体功能实现1）添加联系人模块联系人信息包括：姓名、性别、年龄、电话、住址。\n首先我们实现添加联系人的接口Append，其中包含了一个抽象的append方法。其实现代码如下：\npublic User append() &#123;\n       Scanner scanner1 = new Scanner(System.in);\n       Scanner scanner2 = new Scanner(System.in);\n       Scanner scanner3 = new Scanner(System.in);\n       Scanner scanner4 = new Scanner(System.in);\n       Scanner scanner5 = new Scanner(System.in);\n       System.out.println(\"请输入姓名：\");\n       this.name = scanner1.nextLine();\n\n       while(true) &#123;\n           System.out.println(\"请输入性别：\\n（男/女）\");\n           this.sex = scanner2.nextLine();\n           if (!sex.equals(\"男\") &amp;&amp; !sex.equals(\"女\")) &#123;\n               System.out.println(\"输入错误！请重新输入：\");\n           &#125;\n           else break;\n           &#125;\n\n\n       System.out.println(\"请输入年龄：\");\n       this.age = scanner3.nextInt();\n\n       System.out.println(\"请输入联系电话：\");\n       this.phoneNum = scanner4.nextLine();\n\n       System.out.println(\"请输入家庭住址：\");\n       this.address = scanner5.nextLine();\n       System.out.println(\"添加成功\\n请按任意键继续...\");\n\n       return this;\n   &#125;\n\n在实现添加联系人后，我们将他们储存在了一个arrayList集合中。\nArrayList&lt;User&gt; users &#x3D; new ArrayList&lt;&gt;();\n\n\n\n2）显示联系人通过增强for循环遍历User这个集合来显示联系人，我们设计并实现了Show接口，其代码如下：\nfor(User user : users) &#123;\n\tSystem.out.println(user);\n&#125;\n\n3）删除联系人通过scanner获取输入的姓名，并使用增强for遍历User找到对应姓名的联系人，用remove删除,其代码如下：\nScanner scanner1 &#x3D; new Scanner(System.in);\n                   System.out.println(&quot;请输入您要删除的联系人：&quot;);\n                   String name &#x3D; scanner1.nextLine();\n                   for(User user : users) &#123;\n                       if(user.name.equals(name)) &#123;\n                           users.remove(user);\n                           System.out.println(&quot;删除成功&quot;);\n                           break;\n                       &#125;\n                   &#125;\n\n4)查找联系人通过scanner获取输入的姓名，使用增强for遍历User找到对应姓名的联系人，并显示，其代码如下：\nScanner scanner2 = new Scanner(System.in);\n                    System.out.println(\"请输入你要查找的联系人：\");\n                    String name1 = scanner2.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name1)) &#123;\n                            System.out.println(user);\n                        &#125;\n                    &#125;\n\n5）修改联系人通过scanner获取输入的姓名，使用增强for遍历User找到对应姓名的联系人，删除那个联系人并重新添加新联系人，其代码如下：\nScanner scanner3 = new Scanner(System.in);\n                    System.out.println(\"请输入您要修改的联系人：\");\n                    String name2 = scanner3.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name2)) &#123;\n                            users.remove(user);\n                            users.add(new User().append());\n                        &#125;\n                    &#125;\n\n6）清空联系人当用户输入6，我们通过removeAll清除User中的所有元素，其代码如下：\nusers.removeAll(users);\n                   System.out.println(\"清空联系人成功！\");\n                   break;\n\no)退出当用户输入0时直接退出do  while循环，结束程序。\n3.主模块1）初始界面该界面主要是帮助用户了解如何使用该程序，代码如下：\nSystem.out.println(\"*****************\");\nSystem.out.println(\"***1、添加联系人***\");\nSystem.out.println(\"***2、显示联系人***\");\nSystem.out.println(\"***3、删除联系人***\");\nSystem.out.println(\"***4、查找联系人***\");\nSystem.out.println(\"***5、修改联系人***\");\nSystem.out.println(\"***6、清空联系人***\");\nSystem.out.println(\"***0、退出通讯录***\");\nSystem.out.println(\"*****************\");\n\n2)各项功能各项功能通过switch case进行整合，其总代码如下：\npackage com.baidu.lihaonan;\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class AddressBook &#123;\n    public static void main(String[] args) &#123;\n        ArrayList&lt;User> users = new ArrayList&lt;>();\n        int number;\n        do &#123;\n        System.out.println(\"*****************\");\n        System.out.println(\"***1、添加联系人***\");\n        System.out.println(\"***2、显示联系人***\");\n        System.out.println(\"***3、删除联系人***\");\n        System.out.println(\"***4、查找联系人***\");\n        System.out.println(\"***5、修改联系人***\");\n        System.out.println(\"***6、清空联系人***\");\n        System.out.println(\"***0、退出通讯录***\");\n        System.out.println(\"*****************\");\n        Scanner scanner = new Scanner(System.in);\n        number = scanner.nextInt();\n            switch (number) &#123;\n                case 1:\n                    users.add(new User().append());\n\n                    break;\n                case 2:\n                    for(User user : users) &#123;\n                        System.out.println(user);\n                    &#125;\n                    break;\n                case 3:\n                    Scanner scanner1 = new Scanner(System.in);\n                    System.out.println(\"请输入您要删除的联系人：\");\n                    String name = scanner1.nextLine();\n                    for(User user : users) &#123;\n                        if(user.name.equals(name)) &#123;\n                            users.remove(user);\n                            System.out.println(\"删除成功\");\n                            break;\n                        &#125;\n                    &#125;\n                    break;\n                case 4:\n                    Scanner scanner2 = new Scanner(System.in);\n                    System.out.println(\"请输入你要查找的联系人：\");\n                    String name1 = scanner2.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name1)) &#123;\n                            System.out.println(user);\n                        &#125;\n                    &#125;\n                    break;\n                case 5:\n                    Scanner scanner3 = new Scanner(System.in);\n                    System.out.println(\"请输入您要修改的联系人：\");\n                    String name2 = scanner3.nextLine();\n                    for(User user : users)&#123;\n                        if(user.name.equals(name2)) &#123;\n                            users.remove(user);\n                            users.add(new User().append());\n                        &#125;\n                    &#125;\n                    break;\n                case 6:\n                    users.removeAll(users);\n                    System.out.println(\"清空联系人成功！\");\n                    break;\n            &#125;\n        &#125; while (number != 0);\n                System.out.println(\"已退出\");\n\n\n\n    &#125;\n&#125;\n\n\n3)关于User类的说明我们通过一个User类，其定义如下（其中包含了get-set方法，构造方法，重写的toString()和equals()方法）其代码如下：\npackage com.baidu.lihaonan;\n\nimport java.util.Objects;\nimport java.util.Scanner;\n\npublic class User implements Append, Change, Exit, Find &#123;\n    int age;\n    String name;\n    String sex;\n    String phoneNum;\n    String address;\n\n\n    Scanner scanner = new Scanner(System.in);\n\n    @Override\n    public User append() &#123;\n        Scanner scanner1 = new Scanner(System.in);\n        Scanner scanner2 = new Scanner(System.in);\n        Scanner scanner3 = new Scanner(System.in);\n        Scanner scanner4 = new Scanner(System.in);\n        Scanner scanner5 = new Scanner(System.in);\n        System.out.println(\"请输入姓名：\");\n        this.name = scanner1.nextLine();\n\n        while(true) &#123;\n            System.out.println(\"请输入性别：\\n（男/女）\");\n            this.sex = scanner2.nextLine();\n            if (!sex.equals(\"男\") &amp;&amp; !sex.equals(\"女\")) &#123;\n                System.out.println(\"输入错误！请重新输入：\");\n            &#125;\n            else break;\n            &#125;\n\n\n        System.out.println(\"请输入年龄：\");\n        this.age = scanner3.nextInt();\n\n        System.out.println(\"请输入联系电话：\");\n        this.phoneNum = scanner4.nextLine();\n\n        System.out.println(\"请输入家庭住址：\");\n        this.address = scanner5.nextLine();\n        System.out.println(\"添加成功\\n请按任意键继续...\");\n\n        return this;\n    &#125;\n    @Override\n    public void change()&#123;\n\n    &#125;\n\n    @Override\n    public void exit()&#123;\n\n    &#125;\n    @Override\n    public User find()&#123;\n          return null;\n    &#125;\n\n    @Override\n    public String toString() &#123;\n        return \"名字：\"+name+\"     联系电话：\"+phoneNum+\"    性别:\"+sex+\"    年龄:\"+age+\"   家庭住址:\"+address;\n    &#125;\n\n    @Override\n    public boolean equals(Object o) &#123;\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        User user = (User) o;\n        return age == user.age &amp;&amp; Objects.equals(name, user.name) &amp;&amp; Objects.equals(sex, user.sex) &amp;&amp; Objects.equals(phoneNum, user.phoneNum) &amp;&amp; Objects.equals(address, user.address) &amp;&amp; Objects.equals(scanner, user.scanner);\n    &#125;\n\n    @Override\n    public int hashCode() &#123;\n        return Objects.hash(age, name, sex, phoneNum, address, scanner);\n    &#125;\n&#125;\n\n\n以上就是通讯录管理系统的设计思路以及实现方法。\n","slug":"Java实战项目——通讯录管理系统","date":"2022-01-30T12:46:22.704Z","categories_index":"","tags_index":"","author_index":"lihaonan"}]